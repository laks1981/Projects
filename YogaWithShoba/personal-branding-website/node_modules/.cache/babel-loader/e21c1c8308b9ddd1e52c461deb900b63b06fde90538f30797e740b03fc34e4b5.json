{"ast":null,"code":"var _jsxFileName = \"/Users/suriamo/Desktop/Personal/Projects/YogaWithShoba/personal-branding-website/src/components/PaymentIntegration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentIntegration = () => {\n  _s();\n  const [amount, setAmount] = useState(0);\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const handlePayment = async () => {\n    // Here you would integrate with a payment gateway API\n    try {\n      // Simulate a payment process\n      const response = await fakePaymentGateway(amount);\n      if (response.success) {\n        setPaymentStatus('Payment successful!');\n      } else {\n        setPaymentStatus('Payment failed. Please try again.');\n      }\n    } catch (error) {\n      setPaymentStatus('An error occurred. Please try again.');\n    }\n  };\n  const fakePaymentGateway = amount => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          success: true\n        }); // Simulate a successful payment\n      }, 1000);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(Number(e.target.value)),\n      placeholder: \"Enter amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentIntegration, \"dfTEP4VxfYpq4BMBxYIzYrkabjo=\");\n_c = PaymentIntegration;\nexport default PaymentIntegration;\nvar _c;\n$RefreshReg$(_c, \"PaymentIntegration\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentIntegration","_s","amount","setAmount","paymentStatus","setPaymentStatus","handlePayment","response","fakePaymentGateway","success","error","Promise","resolve","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/suriamo/Desktop/Personal/Projects/YogaWithShoba/personal-branding-website/src/components/PaymentIntegration.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst PaymentIntegration: React.FC = () => {\n    const [amount, setAmount] = useState<number>(0);\n    const [paymentStatus, setPaymentStatus] = useState<string>('');\n\n    const handlePayment = async () => {\n        // Here you would integrate with a payment gateway API\n        try {\n            // Simulate a payment process\n            const response = await fakePaymentGateway(amount);\n            if (response.success) {\n                setPaymentStatus('Payment successful!');\n            } else {\n                setPaymentStatus('Payment failed. Please try again.');\n            }\n        } catch (error) {\n            setPaymentStatus('An error occurred. Please try again.');\n        }\n    };\n\n    const fakePaymentGateway = (amount: number) => {\n        return new Promise<{ success: boolean }>((resolve) => {\n            setTimeout(() => {\n                resolve({ success: true }); // Simulate a successful payment\n            }, 1000);\n        });\n    };\n\n    return (\n        <div>\n            <h2>Payment Integration</h2>\n            <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(Number(e.target.value))}\n                placeholder=\"Enter amount\"\n            />\n            <button onClick={handlePayment}>Pay Now</button>\n            {paymentStatus && <p>{paymentStatus}</p>}\n        </div>\n    );\n};\n\nexport default PaymentIntegration;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAS,CAAC,CAAC;EAC/C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE9D,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,kBAAkB,CAACN,MAAM,CAAC;MACjD,IAAIK,QAAQ,CAACE,OAAO,EAAE;QAClBJ,gBAAgB,CAAC,qBAAqB,CAAC;MAC3C,CAAC,MAAM;QACHA,gBAAgB,CAAC,mCAAmC,CAAC;MACzD;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZL,gBAAgB,CAAC,sCAAsC,CAAC;IAC5D;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAIN,MAAc,IAAK;IAC3C,OAAO,IAAIS,OAAO,CAAwBC,OAAO,IAAK;MAClDC,UAAU,CAAC,MAAM;QACbD,OAAO,CAAC;UAAEH,OAAO,EAAE;QAAK,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACN,CAAC;EAED,oBACIV,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MACIoB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAElB,MAAO;MACdmB,QAAQ,EAAGC,CAAC,IAAKnB,SAAS,CAACoB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;MACnDK,WAAW,EAAC;IAAc;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFnB,OAAA;MAAQ2B,OAAO,EAAEpB,aAAc;MAAAQ,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/Cd,aAAa,iBAAIL,OAAA;MAAAe,QAAA,EAAIV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAACjB,EAAA,CAxCID,kBAA4B;AAAA2B,EAAA,GAA5B3B,kBAA4B;AA0ClC,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}